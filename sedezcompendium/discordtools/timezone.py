import json
from json import JSONEncoder


def _default(self, obj):
    return getattr(obj.__class__, "to_json", _default.default)(obj)


_default.default = JSONEncoder().default
JSONEncoder.default = _default


class TimeZone:
    time_zones = {
        "ACDT": [10, 30],
        "ACST": [9, 30],
        "ACT": [-5, 0],
        "ADT": [-3, 0],
        "AEDT": [11, 0],
        "AEST": [10, 0],
        "AFT": [4, 30],
        "AKDT": [-8, 0],
        "AKST": [-9, 0],
        "ALMT": [6, 0],
        "AMST": [-3, 0],
        "AMT": [-4, 0],
        "AMT2": [4, 0],
        "ANAT": [12, 0],
        "AQTT": [5, 0],
        "ART": [-3, 0],
        "AST": [-4, 0],
        "AST2": [3, 0],
        "AWST": [8, 0],
        "AZOT": [1, 0],
        "AZT": [4, 0],
        "BDT": [8, 0],
        "BIOT": [6, 0],
        "BIT": [-12, 0],
        "BOT": [-4, 0],
        "BRST": [-2, 0],
        "BRT": [-3, 0],
        "BST": [1, 0],
        "BST2": [6, 0],
        "BST3": [11, 0],
        "BTT": [6, 0],
        "CAT": [2, 0],
        "CCT": [6, 30],
        "CDT": [-5, 0],
        "CDT2": [-4, 0],
        "CEST": [2, 0],
        "CET": [1, 0],
        "CHADT": [13, 45],
        "CHAST": [12, 45],
        "CHOT": [8, 0],
        "CHOST": [9, 0],
        "CHST": [10, 0],
        "CHUT": [10, 0],
        "CIST": [-8, 0],
        "CIT": [8, 0],
        "CKT": [-10, 0],
        "CLST": [-3, 0],
        "CLT": [-4, 0],
        "COST": [-4, 0],
        "COT": [-5, 0],
        "CST": [-6, 0],
        "CST2": [8, 0],
        "CST3": [-5, 0],
        "CT": [8, 0],
        "CVT": [-1, 0],
        "CWST": [8, 45],
        "CXT": [7, 0],
        "DAVT": [7, 0],
        "DDUT": [10, 0],
        "DFT": [1, 0],
        "EASST": [5, 0],
        "EAST": [-6, 0],
        "EAT": [3, 0],
        "ECT": [4, 0],
        "ECT2": [-5, 0],
        "EDT": [-4, 0],
        "EEST": [3, 0],
        "EET": [2, 0],
        "EGT": [-1, 0],
        "EIT": [9, 0],
        "EST": [-5, 0],
        "FET": [3, 0],
        "FJT": [12, 0],
        "FKST": [-3, 0],
        "FKT": [-4, 0],
        "FNT": [-2, 0],
        "GALT": [-6, 0],
        "GAMT": [-9, 0],
        "GET": [4, 0],
        "GFT": [-3, 0],
        "GILT": [12, 0],
        "GIT": [-9, 0],
        "GST": [4, 0],
        "GST2": [-2, 0],
        "GYT": [-4, 0],
        "HDT": [9, 0],
        "HAEC": [2, 0],
        "HST": [-10, 0],
        "HKT": [8, 0],
        "HMT": [5, 0],
        "HOVST": [8, 0],
        "HOVT": [7, 0],
        "ICT": [7, 0],
        "IDLW": [-12, 0],
        "IDT": [3, 0],
        "IOT": [3, 0],
        "IRDT": [4, 30],
        "IRKT": [8, 0],
        "IRST": [3, 30],
        "IST": [2, 0],
        "IST2": [1, 0],
        "IST3": [5, 30],
        "JST": [9, 0],
        "KALT": [2, 0],
        "KGT": [6, 0],
        "KOST": [11, 0],
        "KRAT": [7, 0],
        "KST": [9, 0],
        "LHST": [10, 30],
        "LINT": [14, 0],
        "MAGT": [12, 0],
        "MART": [-9, -30],
        "MAWT": [5, 0],
        "MDT": [-6, 0],
        "MET": [1, 0],
        "MEST": [2, 0],
        "MHT": [12, 0],
        "MIST": [11, 0],
        "MIT": [-9, -30],
        "MMT": [6, 30],
        "MSK": [3, 0],
        "MST": [-7, 0],
        "MST2": [8, 0],
        "MUT": [4, 0],
        "MVT": [5, 0],
        "MYT": [8, 0],
        "NCT": [11, 0],
        "NDT": [-2, -30],
        "NFT": [11, 0],
        "NOVT": [7, 0],
        "NPT": [5, 45],
        "NST": [-3, -30],
        "NT": [-3, -30],
        "NUT": [-11, 0],
        "NZDT": [13, 0],
        "NZST": [12, 0],
        "OMST": [6, 0],
        "ORAT": [5, 0],
        "PDT": [-7, 0],
        "PETT": [12, 0],
        "PGT": [10, 0],
        "PHOT": [13, 0],
        "PHT": [8, 0],
        "PKT": [5, 0],
        "PMDT": [-2, 0],
        "PMST": [-3, 0],
        "PONT": [11, 0],
        "PST": [-8, 0],
        "PST2": [8, 0],
        "PYST": [-3, 0],
        "PYT": [-4, 0],
        "RET": [4, 0],
        "ROTT": [-3, 0],
        "SAKT": [11, 0],
        "SAMT": [4, 0],
        "SAST": [2, 0],
        "SBT": [11, 0],
        "SCT": [4, 0],
        "SDT": [-10, 0],
        "SGT": [8, 0],
        "SLST": [5, 30],
        "SRET": [11, 0],
        "SRT": [-3, 0],
        "SST": [-11, 0],
        "SST2": [8, 0],
        "SYOT": [3, 0],
        "TAHT": [-10, 0],
        "THA": [7, 0],
        "TFT": [5, 0],
        "TJT": [5, 0],
        "TKT": [13, 0],
        "TLT": [9, 0],
        "TMT": [5, 0],
        "TRT": [3, 0],
        "TOT": [13, 0],
        "TVT": [12, 0],
        "ULAST": [9, 0],
        "UTC": [0, 0],
        "UYST": [-2, 0],
        "UYT": [-3, 0],
        "UZT": [5, 0],
        "VET": [-4, 0],
        "VLAT": [10, 0],
        "VOLT": [4, 0],
        "VOST": [6, 0],
        "VUT": [11, 0],
        "WAKT": [12, 0],
        "WAST": [2, 0],
        "WAT": [1, 0],
        "WEST": [1, 0],
        "WIT": [7, 0],
        "WST": [8, 0],
        "YAKT": [9, 0],
        "YEKT": [5, 0]
    }
    def __init__(self, time_zone): 

        if time_zone is not None:
            time_zone = time_zone.upper()

        if time_zone in self.time_zones:
            self.time_zone = time_zone
        else:
            if isinstance(time_zone, str):
                raise ValueError()
            else:
                raise TypeError()

    def __str__(self):
        return self.time_zone

    def get_offset(self):
        try:
            return self.time_zones[self.time_zone]
        except:
            return None

    def to_json(self): 
        return self.time_zone
